//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevIdent.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.0.3.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 192, 192")]
        public global::System.Drawing.Color ColorForm {
            get {
                return ((global::System.Drawing.Color)(this["ColorForm"]));
            }
            set {
                this["ColorForm"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 192, 192")]
        public global::System.Drawing.Color ColorMenu {
            get {
                return ((global::System.Drawing.Color)(this["ColorMenu"]));
            }
            set {
                this["ColorMenu"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 192, 192")]
        public global::System.Drawing.Color ColorButtonsDefault {
            get {
                return ((global::System.Drawing.Color)(this["ColorButtonsDefault"]));
            }
            set {
                this["ColorButtonsDefault"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 192, 192")]
        public global::System.Drawing.Color ColorButtonsHover {
            get {
                return ((global::System.Drawing.Color)(this["ColorButtonsHover"]));
            }
            set {
                this["ColorButtonsHover"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 192, 192")]
        public global::System.Drawing.Color ColorPanel {
            get {
                return ((global::System.Drawing.Color)(this["ColorPanel"]));
            }
            set {
                this["ColorPanel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 192, 192")]
        public global::System.Drawing.Color ColorContent {
            get {
                return ((global::System.Drawing.Color)(this["ColorContent"]));
            }
            set {
                this["ColorContent"] = value;
            }
        }
    }
}
